name: Update Code Statistics on Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Allows pushing changes to the repository
  pages: write     # Required for GitHub Pages (if needed)
  id-token: write  # Used for authentication

jobs:
  update-code-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full Git history is available

      - name: Run Elocuent
        run: |
          mkdir -p meta  # Ensure directory exists before writing CSV
          npx elocuent -d . -o meta/loc.csv

      - name: Debug Git Status Before Cleaning
        run: |
          echo "üîç Checking Git status before cleaning..."
          git status
          echo "üîç Listing untracked files..."
          git ls-files --others --exclude-standard
          echo "üîç Showing exact changes..."
          git diff

      - name: Force Clean Working Directory Before Pulling
        run: |
          echo "üö® Cleaning working directory to prevent pull conflicts..."
          git reset --hard HEAD  # Removes unstaged changes
          git clean -fdx  # Deletes all untracked files, including hidden files & directories
          rm -rf .git/index.lock  # Removes any Git lock files that could be causing the issue
          git fetch --all  # Ensures the runner has the latest remote changes
          git checkout main  # Ensures we are on the correct branch

      - name: Debug Git Status After Cleaning
        run: |
          echo "‚úÖ Git status after cleaning:"
          git status

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          echo "üîÑ Checking if meta/loc.csv is actually changed..."
          git status meta/loc.csv || echo "No file change detected"

          git add -f meta/loc.csv  # Force add the file
          
          # Only commit if changes exist
          git diff --staged --quiet || git commit -m "Update code statistics"

          git push || echo "No changes to push"
